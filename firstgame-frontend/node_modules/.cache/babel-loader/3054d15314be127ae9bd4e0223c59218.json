{"ast":null,"code":"import { authenticationService } from \"./AuthServices\";\nimport { apiService } from \"./APIServices\";\nexport const userService = {\n  getUserData,\n  getGearData,\n  initCharacter\n};\n\nconst axios = require(\"axios\");\n\nfunction getUserData(currentUser, self) {\n  axios.get(apiService.character, {\n    headers: {\n      Authorization: \"Bearer \".concat(currentUser)\n    }\n  }).then(function (response) {\n    //console.log(response.data);\n    self.setState({\n      data: response.data\n    });\n  }).catch(function (error) {\n    authenticationService.logout();\n  });\n}\n\nfunction getGearData(currentUser, self) {\n  axios.get(apiService.updatecharacter, {\n    headers: {\n      Authorization: \"Bearer \".concat(currentUser)\n    }\n  }).then(function (response) {\n    //console.log(response.data);\n    self.setState({\n      gear: response.data\n    });\n  }).catch(function (error) {\n    authenticationService.logout();\n  });\n}\n\nfunction initCharacter(currentUser, name, gear, self) {\n  const data = {\n    name: name\n  };\n  axios.patch(apiService.changename, data, {\n    headers: {\n      Authorization: \"Bearer \".concat(currentUser)\n    }\n  }).catch(function (error) {\n    if (error.response.data.error.statusCode === 401) authenticationService.logout();else if (self.unmount) self.setState({\n      error\n    });\n  });\n  axios.patch(apiService.changename, data, {\n    headers: {\n      Authorization: \"Bearer \".concat(currentUser)\n    }\n  }).then(function (response) {\n    //console.log(response.data);\n    self.setState({\n      gear: response.data\n    });\n  }).catch(function (error) {\n    if (error.response.data.error.statusCode === 401) authenticationService.logout();else if (self.unmount) self.setState({\n      error\n    });\n  });\n}","map":{"version":3,"sources":["/Users/xiaocase/Documents/GitHub/first-web-game-lb4/firstgame-frontend/src/services/UserServices.js"],"names":["authenticationService","apiService","userService","getUserData","getGearData","initCharacter","axios","require","currentUser","self","get","character","headers","Authorization","then","response","setState","data","catch","error","logout","updatecharacter","gear","name","patch","changename","statusCode","unmount"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,gBAAtC;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,WADyB;AAEzBC,EAAAA,WAFyB;AAGzBC,EAAAA;AAHyB,CAApB;;AAMP,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASJ,WAAT,CAAqBK,WAArB,EAAkCC,IAAlC,EAAwC;AACtCH,EAAAA,KAAK,CACFI,GADH,CACOT,UAAU,CAACU,SADlB,EAC6B;AACzBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYL,WAAZ;AAAf;AADgB,GAD7B,EAIGM,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB;AACAN,IAAAA,IAAI,CAACO,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAjB,KAAd;AACD,GAPH,EAQGC,KARH,CAQS,UAASC,KAAT,EAAgB;AACrBnB,IAAAA,qBAAqB,CAACoB,MAAtB;AACD,GAVH;AAWD;;AAED,SAAShB,WAAT,CAAqBI,WAArB,EAAkCC,IAAlC,EAAwC;AACtCH,EAAAA,KAAK,CACFI,GADH,CACOT,UAAU,CAACoB,eADlB,EACmC;AAC/BT,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYL,WAAZ;AAAf;AADsB,GADnC,EAIGM,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB;AACAN,IAAAA,IAAI,CAACO,QAAL,CAAc;AAAEM,MAAAA,IAAI,EAAEP,QAAQ,CAACE;AAAjB,KAAd;AACD,GAPH,EAQGC,KARH,CAQS,UAASC,KAAT,EAAgB;AACrBnB,IAAAA,qBAAqB,CAACoB,MAAtB;AACD,GAVH;AAWD;;AAED,SAASf,aAAT,CAAuBG,WAAvB,EAAoCe,IAApC,EAA0CD,IAA1C,EAAgDb,IAAhD,EAAsD;AACpD,QAAMQ,IAAI,GAAG;AACXM,IAAAA,IAAI,EAAEA;AADK,GAAb;AAGAjB,EAAAA,KAAK,CACFkB,KADH,CACSvB,UAAU,CAACwB,UADpB,EACgCR,IADhC,EACsC;AAClCL,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYL,WAAZ;AAAf;AADyB,GADtC,EAIGU,KAJH,CAIS,UAASC,KAAT,EAAgB;AACrB,QAAIA,KAAK,CAACJ,QAAN,CAAeE,IAAf,CAAoBE,KAApB,CAA0BO,UAA1B,KAAyC,GAA7C,EACE1B,qBAAqB,CAACoB,MAAtB,GADF,KAEK,IAAIX,IAAI,CAACkB,OAAT,EAAkBlB,IAAI,CAACO,QAAL,CAAc;AAAEG,MAAAA;AAAF,KAAd;AACxB,GARH;AAUAb,EAAAA,KAAK,CACFkB,KADH,CACSvB,UAAU,CAACwB,UADpB,EACgCR,IADhC,EACsC;AAClCL,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYL,WAAZ;AAAf;AADyB,GADtC,EAIGM,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB;AACAN,IAAAA,IAAI,CAACO,QAAL,CAAc;AAAEM,MAAAA,IAAI,EAAEP,QAAQ,CAACE;AAAjB,KAAd;AACD,GAPH,EAQGC,KARH,CAQS,UAASC,KAAT,EAAgB;AACrB,QAAIA,KAAK,CAACJ,QAAN,CAAeE,IAAf,CAAoBE,KAApB,CAA0BO,UAA1B,KAAyC,GAA7C,EACE1B,qBAAqB,CAACoB,MAAtB,GADF,KAEK,IAAIX,IAAI,CAACkB,OAAT,EAAkBlB,IAAI,CAACO,QAAL,CAAc;AAAEG,MAAAA;AAAF,KAAd;AACxB,GAZH;AAaD","sourcesContent":["import { authenticationService } from \"./AuthServices\";\nimport { apiService } from \"./APIServices\";\n\nexport const userService = {\n  getUserData,\n  getGearData,\n  initCharacter\n};\n\nconst axios = require(\"axios\");\n\nfunction getUserData(currentUser, self) {\n  axios\n    .get(apiService.character, {\n      headers: { Authorization: `Bearer ${currentUser}` }\n    })\n    .then(function(response) {\n      //console.log(response.data);\n      self.setState({ data: response.data });\n    })\n    .catch(function(error) {\n      authenticationService.logout();\n    });\n}\n\nfunction getGearData(currentUser, self) {\n  axios\n    .get(apiService.updatecharacter, {\n      headers: { Authorization: `Bearer ${currentUser}` }\n    })\n    .then(function(response) {\n      //console.log(response.data);\n      self.setState({ gear: response.data });\n    })\n    .catch(function(error) {\n      authenticationService.logout();\n    });\n}\n\nfunction initCharacter(currentUser, name, gear, self) {\n  const data = {\n    name: name\n  };\n  axios\n    .patch(apiService.changename, data, {\n      headers: { Authorization: `Bearer ${currentUser}` }\n    })\n    .catch(function(error) {\n      if (error.response.data.error.statusCode === 401)\n        authenticationService.logout();\n      else if (self.unmount) self.setState({ error });\n    });\n\n  axios\n    .patch(apiService.changename, data, {\n      headers: { Authorization: `Bearer ${currentUser}` }\n    })\n    .then(function(response) {\n      //console.log(response.data);\n      self.setState({ gear: response.data });\n    })\n    .catch(function(error) {\n      if (error.response.data.error.statusCode === 401)\n        authenticationService.logout();\n      else if (self.unmount) self.setState({ error });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}